CREATE TABLE IF NOT EXISTS Avalaibility(
    Id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    Description VARCHAR(100) NOT NULL    
);

CREATE TABLE IF NOT EXISTS Movies(
    Id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    Title VARCHAR(500) NOT NULL CHECK (Title <> ''),
    Description TEXT NOT NULL,
    Stock INTEGER NOT NULL,
    RentalPrice MONEY NOT NULL,
    SalePrice MONEY NOT NULL,
    IdAvalaibility INTEGER NOT NULL REFERENCES Avalaibility(Id)
);

CREATE TABLE IF NOT EXISTS LogMovies(
    Id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    Title VARCHAR(500) NOT NULL CHECK (Title <> ''),
    RentalPrice MONEY NOT NULL,
    SalePrice MONEY NOT NULL,
    IdMovie INTEGER NOT NULL REFERENCES Movies (Id)

);

CREATE TABLE IF NOT EXISTS ImageMovies(
    Id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    Image BYTEA NOT NULL,
    IdMovie INTEGER NOT NULL REFERENCES Movies(Id)
);

CREATE TABLE IF NOT EXISTS TypeUsers(
    Id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    Description VARCHAR(100) NOT NULL CHECK (Description <> '')
);

CREATE TABLE IF NOT EXISTS Users(
    Id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    FirstName VARCHAR(100) NOT NULL CHECK (FirstName <> ''),
    LastName VARCHAR(100) NOT NULL CHECK (LastName <> ''),
    Birthday TIMESTAMP NOT NULL,  
    IdType INTEGER NOT NULL REFERENCES TypeUsers(Id)
);

CREATE TABLE IF NOT EXISTS RentMovies(
    Id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    DateRental TIMESTAMP NOT NULL,
    DateReturn TIMESTAMP NOT NULL,
    IdMovie INTEGER NOT NULL REFERENCES Movies(Id),
    IdUser INTEGER NOT NULL REFERENCES Users(Id)
);

CREATE TABLE IF NOT EXISTS SaleMovies(
    Id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    DateSale TIMESTAMP NOT NULL,
    Units INTEGER NOT NULL,
    IdMovie INTEGER NOT NULL REFERENCES Movies(Id),
    IdUser INTEGER NOT NULL REFERENCES Users(Id)
);

CREATE TABLE IF NOT EXISTS LikesMovies(
    Id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    IdMovie INTEGER NOT NULL REFERENCES Movies(Id),
    IdUser INTEGER NOT NULL REFERENCES Users(Id)
);

